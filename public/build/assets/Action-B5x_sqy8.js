import{G as F,m as g,r as p,o as _,q as N,w as u,d as m,e as r,u as a,s as v,t as V,I as E,a as O,F as P,f as j}from"./app-DCfJDSeM.js";const q={class:"grid grid-cols-3 gap-6"},A={class:"col-span-3 sm:col-span-1"},T={class:"col-span-3 sm:col-span-1"},H={class:"col-span-3 sm:col-span-1"},R={class:"col-span-3 sm:col-span-1"},S={class:"col-span-3 sm:col-span-1"},k={class:"col-span-3"},I={name:"ExamForm"},w=Object.assign(I,{setup(x){const l={name:"",code:"",term:"",displayName:"",position:"",description:""},i="exam/",s=F(i),c=g({terms:[]}),t=g({...l}),f=n=>{Object.assign(c,n)},$=n=>{Object.assign(l,{...n,term:n.term.uuid}),Object.assign(t,E(l))};return(n,o)=>{const b=p("BaseInput"),y=p("BaseSelect"),U=p("BaseTextarea"),B=p("FormAction");return _(),N(B,{"pre-requisites":!0,onSetPreRequisites:f,"init-url":i,"init-form":l,form:t,setForm:$,redirect:"Exam"},{default:u(()=>[m("div",q,[m("div",A,[r(b,{type:"text",modelValue:t.name,"onUpdate:modelValue":o[0]||(o[0]=e=>t.name=e),name:"name",label:n.$trans("exam.props.name"),error:a(s).name,"onUpdate:error":o[1]||(o[1]=e=>a(s).name=e),autofocus:""},null,8,["modelValue","label","error"])]),m("div",T,[r(b,{type:"text",modelValue:t.code,"onUpdate:modelValue":o[2]||(o[2]=e=>t.code=e),name:"code",label:n.$trans("exam.props.code"),error:a(s).code,"onUpdate:error":o[3]||(o[3]=e=>a(s).code=e)},null,8,["modelValue","label","error"])]),m("div",H,[r(y,{modelValue:t.term,"onUpdate:modelValue":o[4]||(o[4]=e=>t.term=e),name:"term",label:n.$trans("exam.term.term"),"value-prop":"uuid",options:c.terms,error:a(s).term,"onUpdate:error":o[5]||(o[5]=e=>a(s).term=e)},{selectedOption:u(e=>{var d;return[v(V(e.value.name)+" ("+V(((d=e.value.division)==null?void 0:d.name)||n.$trans("general.all"))+") ",1)]}),listOption:u(e=>{var d;return[v(V(e.option.name)+" ("+V(((d=e.option.division)==null?void 0:d.name)||n.$trans("general.all"))+") ",1)]}),_:1},8,["modelValue","label","options","error"])]),m("div",R,[r(b,{type:"text",modelValue:t.displayName,"onUpdate:modelValue":o[6]||(o[6]=e=>t.displayName=e),name:"displayName",label:n.$trans("exam.props.display_name"),error:a(s).displayName,"onUpdate:error":o[7]||(o[7]=e=>a(s).displayName=e)},null,8,["modelValue","label","error"])]),m("div",S,[r(b,{type:"text",modelValue:t.position,"onUpdate:modelValue":o[8]||(o[8]=e=>t.position=e),name:"position",label:n.$trans("exam.props.position"),error:a(s).position,"onUpdate:error":o[9]||(o[9]=e=>a(s).position=e)},null,8,["modelValue","label","error"])]),m("div",k,[r(U,{modelValue:t.description,"onUpdate:modelValue":o[10]||(o[10]=e=>t.description=e),name:"description",label:n.$trans("exam.props.description"),error:a(s).description,"onUpdate:error":o[11]||(o[11]=e=>a(s).description=e)},null,8,["modelValue","label","error"])])])]),_:1},8,["form"])}}}),C={name:"ExamAction"},G=Object.assign(C,{setup(x){const l=j();return(i,s)=>{const c=p("PageHeaderAction"),t=p("PageHeader"),f=p("ParentTransition");return _(),O(P,null,[r(t,{title:i.$trans(a(l).meta.trans,{attribute:i.$trans(a(l).meta.label)}),navs:[{label:i.$trans("exam.exam"),path:"Exam"}]},{default:u(()=>[r(c,{name:"Exam",title:i.$trans("exam.exam"),actions:["list"]},null,8,["title"])]),_:1},8,["title","navs"]),r(f,{appear:"",visibility:!0},{default:u(()=>[r(w)]),_:1})],64)}}});export{G as default};
